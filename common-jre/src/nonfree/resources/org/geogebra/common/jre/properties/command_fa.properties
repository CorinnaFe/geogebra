# Copyright (c) GeoGebra Group, office@geogebra.org
# The GeoGebra language files are licensed to you under the terms of the
# Creative Commons Attribution-NonCommercial-ShareAlike licence (version 3.0 or later),
# the current text of which can be found via this link:
# https://creativecommons.org/licenses/by-nc-sa/3.0/legalcode.
# Attribution (as required by that Creative Commons license) should take the form of
# (at least) a mention of our name, an appropriate copyright notice and a link to our
# website located at https://www.geogebra.org.
# For further details, please see https://www.geogebra.org/license
ANOVA.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0641\u0647\u0631\u0633\u062a>, ... ]
AffineRatio.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Angle=\u0632\u0627\u0648\u06cc\u0647
AngularBisector.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Append.Syntax=[ <\u0641\u0647\u0631\u0633\u062a>, <\u0634\u06cc> ]\n[ <\u0634\u06cc>, <\u0641\u0647\u0631\u0633\u062a> ]
ApplyMatrix.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633>, <\u0634\u06cc> ]
Arc.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0628\u06cc\u0636\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u062f\u0627\u06cc\u0631\u0647>, <Parameter Value>, <Parameter Value> ]\n[ <\u0628\u06cc\u0636\u06cc>, <Parameter Value>, <Parameter Value> ]
AreConcurrent.Syntax=[ <\u062e\u0637>, <\u062e\u0637>, <\u062e\u0637> ]
AreCongruent.Syntax=[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
AreEqual.Syntax=[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
ArePerpendicular.Syntax=[ <\u062e\u0637>, <\u062e\u0637> ]
Assume=\u0641\u0631\u0636
Assume.SyntaxCAS=[ <\u0634\u0631\u0637>, <\u0639\u0628\u0627\u0631\u062a> ]
Asymptote.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]\n[ <\u062a\u0627\u0628\u0639> ]\n[ <Implicit Curve> ]
BarCode.Syntax=[ ]\n[ <Image> ]\n[ <Text or Number>, "<Format (optional)>", "<Error Correction (optional)>", <Width (optional)>, <Height (optional)> ]
Bernoulli=\u0628\u0631\u0646\u0648\u0644\u06cc
CFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
CIFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
CSolutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0644\u06cc\u0633\u062a \u062a\u0648\u0627\u0628\u0639>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Cauchy.Syntax=[ <Median>, <Scale>, <Variable Value> ]\n[ <Median>, <Scale>, <Variable Value>, <Boolean Cumulative> ]\n[ <Median>, <Scale>, x, <Boolean Cumulative> ]
Cell=\u0633\u0644\u0648\u0644
Cell.Syntax=[ <\u0633\u062a\u0648\u0646>, <\u0633\u0637\u0631> ]
ChiSquaredTest.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]\n[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0645\u0627\u062a\u0631\u06cc\u0633>, <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Circle=\u062f\u0627\u06cc\u0631\u0647
Circle.Syntax3D=[ <Point>, <Radius Number> ]\n[ <Point>, <Segment> ]\n[ <Point>, <Point> ]\n[ <Line>, <Point> ]\n[ <Point>, <Point>, <Point> ]\n[ <Point>, <Radius>, <Direction> ]\n[ <Point>, <Point>, <Direction> ]
CircleArc.Syntax=[ <\u0646\u0642\u0637\u0647 \u0645\u06cc\u0627\u0646\u06cc>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
CircumcircleArc.Syntax=[ \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647, \u0646\u0642\u0637\u0647 ]
CircumcircleSector.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Classes.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627>, <\u062a\u0639\u062f\u0627\u062f \u062f\u0633\u062a\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627>, <\u0634\u0631\u0648\u0639>, <\u0637\u0648\u0644 \u062f\u0633\u062a\u0647\u200c\u0647\u0627> ]
ClosestPoint.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0645\u0633\u06cc\u0631> ]\n[ <\u062e\u0637>, <\u062e\u0637> ]
Coefficients=\u0636\u0631\u0627\u064a\u0628
Column=\u0633\u062a\u0648\u0646
Command=\u062f\u0633\u062a\u0648\u0631
CompetitionRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Cone=\u0645\u062e\u0631\u0648\u0637
Conic=\u0645\u062e\u0631\u0648\u0637\u06cc
Conic.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
ConstructionStep.Syntax=[ ]\n[ <\u0634\u06cc\u0621> ]
ContingencyTable.Syntax=[ <List of Text>, <List of Text> ]\n[ <List of Text>, <List of Text>, <Options> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table> ]\n[ <List of Row Values>, <List of Column Values>, <Frequency Table>, <Options> ]
ConvexHull.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
CopyFreeObject.Syntax=[ <\u0634\u06cc\u0621> ]
Corner=\u06af\u0648\u0634\u0647
CountIf.Syntax=[ <\u0634\u0631\u0637>, <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u0631\u0637>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0644\u06cc\u0633\u062a> ]
Cross.Syntax=[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]
CrossRatio.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Cubic.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0639\u062f\u062f> ]
Cylinder=\u0627\u0633\u062a\u0648\u0627\u0646\u0647
Cylinder.Syntax=[ <\u062f\u0627\u06cc\u0631\u0647>, <\u0627\u0631\u062a\u0641\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0634\u0639\u0627\u0639> ]
DataFunction.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Defined.Syntax=[ <\u0634\u06cc\u0621> ]
DelauneyTriangulation.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Denominator.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u062a\u0627\u0628\u0639> ]
Derivative=\u0645\u0634\u062a\u0642
Determinant=\u062f\u062a\u0631\u0645\u06cc\u0646\u0627\u0646
Difference=\u062a\u0641\u0627\u0636\u0644
Dimension=\u0628\u064f\u0639\u062f
Dimension.Syntax=[ <\u0634\u06cc\u0621> ]
Direction.Syntax=[ <\u062e\u0637> ]
Divisors.Syntax=[ <\u0639\u062f\u062f> ]
DivisorsList.Syntax=[ <\u0639\u062f\u062f> ]
DivisorsSum.Syntax=[ <\u0639\u062f\u062f> ]
Dot.Syntax=[ <\u0628\u0631\u062f\u0627\u0631>, <\u0628\u0631\u062f\u0627\u0631> ]
DotPlot.Syntax=[ <List of Raw Data>, <Stack Adjacent Dots (optional)>, <Scale Factor (optional)> ]
Eigenvalues.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Eigenvectors.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
Ellipse=\u0628\u06cc\u0636\u06cc
Envelope=\u067e\u0627\u06a9\u062a
Envelope.Syntax=[ <\u0645\u0633\u06cc\u0631>, <\u0646\u0642\u0637\u0647> ]
Erlang=\u0627\u0631\u0644\u0627\u0646\u06af
Excentricity.Syntax=[ <\u0645\u062e\u0631\u0648\u0637> ]
Expand.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]
Exponential=\u0646\u0645\u0627\u06cc\u06cc
First=\u0627\u0648\u0644
Fit=\u0645\u0646\u0627\u0633\u0628
FitExp.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitGrowth.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitLineY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitLogistic.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitPow.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FitSin.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
FractionText.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0646\u0642\u0637\u0647> ]
Frequency=\u0641\u0631\u0627\u0648\u0627\u0646\u06cc
Function=\u062a\u0627\u0628\u0639
Function.Syntax=[ <List of Numbers> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
GCD.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Gamma=\u06af\u0627\u0645\u0627
Gamma.Syntax=[ <Alpha>, <Beta>, <Variable Value> ]\n[ <Alpha>, <Beta>, <Variable Value>, <Boolean Cumulative> ]\n[ <Alpha>, <Beta>, x, <Boolean Cumulative> ]
Gamma.SyntaxCAS=[ <\u0622\u0644\u0641\u0627>, <\u0628\u062a\u0627>, <\u0645\u0642\u062f\u0627\u0631 \u0645\u062a\u063a\u06cc\u0631> ]
GeometricMean.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
GetTime.Syntax=[ ]\n[ "<Format>" ]
HarmonicMean.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
HideLayer.Syntax=[ <\u0639\u062f\u062f> ]
Histogram=\u0647\u06cc\u0633\u062a\u0648\u06af\u0631\u0627\u0645
HistogramRight.Syntax=[ <List of Class Boundaries>, <List of Heights> ]\n[ <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]\n[ <Boolean Cumulative>, <List of Class Boundaries>, <List of Raw Data>, <Use Density>, <Density Scale Factor (optional)> ]
IFactor.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631> ]
Identity=\u0647\u0645\u0627\u0646\u06cc
Identity.Syntax=[ <\u0639\u062f\u062f> ]
If=\u0627\u06af\u0631
ImplicitCurve.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <f(x, y)> ]
Incircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
InfiniteCone.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0628\u0631\u062f\u0627\u0631>, <\u0632\u0627\u0648\u06cc\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0632\u0627\u0648\u06cc\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u062e\u0637>, <\u0632\u0627\u0648\u06cc\u0647> ]
InfiniteCylinder.Syntax=[ <\u062e\u0637>, <\u0634\u0639\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0628\u0631\u062f\u0627\u0631>, <\u0634\u0639\u0627\u0639> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0634\u0639\u0627\u0639> ]
Insert.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a> ]\n[ <\u0634\u06cc\u0621>, <\u0644\u06cc\u0633\u062a>, <\u0645\u0648\u0642\u0639\u06cc\u062a> ]
Integral=\u0627\u0646\u062a\u06af\u0631\u0627\u0644
Intersect.SyntaxCAS=[ <\u062a\u0627\u0628\u0639>, <\u062a\u0627\u0628\u0639> ]
Intersection.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
InverseLaplace.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u062a\u063a\u06cc\u0631> ]
Invert.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]\n[ <\u062a\u0627\u0628\u0639> ]
IsPrime.Syntax=[ <\u0639\u062f\u062f> ]
IsTangent.Syntax=[ <\u062e\u0637>, <\u0645\u062e\u0631\u0648\u0637> ]
JordanDiagonalization.SyntaxCAS=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
LCM.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Laplace.Syntax=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u062a\u063a\u06cc\u0631> ]
Last=\u0622\u062e\u0631\u06cc\u0646
LeftSide.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Length=\u0637\u0648\u0644
Limit.Syntax=[ <\u062a\u0627\u0628\u0639>, <\u0645\u0642\u062f\u0627\u0631> ]
LimitAbove.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u0642\u062f\u0627\u0631> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u0645\u062a\u063a\u06cc\u0631>, <\u0645\u0642\u062f\u0627\u0631> ]
LimitBelow.Syntax=[ <\u0645\u0642\u062f\u0627\u0631>, <\u062a\u0627\u0628\u0639> ]
Line=\u062e\u0637
LogNormal.Syntax=[ <Mean>, <Standard Deviation>, <Variable Value> ]\n[ <Mean>, <Standard Deviation>, <Variable Value>, <Boolean Cumulative> ]\n[ <Mean>, <Standard Deviation>, x, <Boolean Cumulative> ]
Logistic.Syntax=[ <Mean>, <Scale>, <Variable Value> ]\n[ <Mean>, <Scale>, <Variable Value>, <Boolean Cumulative> ]\n[ <Mean>, <Scale>, x, <Boolean Cumulative> ]
MAD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Max.Syntax=[ <Interval> ]\n[ <List> ]\n[ <Number>, <Number> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
Max.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
Mean=\u0645\u06cc\u0627\u0646\u06af\u06cc\u0646
Mean.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
MeanX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
MeanY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Median=\u0645\u06cc\u0627\u0646\u0647
Median.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Median.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Min.Syntax=[ <Interval> ]\n[ <List> ]\n[ <Number>, <Number> ]\n[ <List of Data>, <List of Frequencies> ]\n[ <Function>, <Start x-Value>, <End x-Value> ]
Min.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
MinimumSpanningTree.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Mirror.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0634\u06cc\u0621>, <\u062e\u0637> ]\n[ <\u0634\u06cc\u0621>, <\u062f\u0627\u06cc\u0631\u0647> ]
MixedNumber.SyntaxCAS=[ <\u0639\u062f\u062f> ]
Mod=\u0645\u062f
Mode.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
NDerivative.Syntax=[ <\u062a\u0627\u0628\u0639> ]
NSolutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631 = \u0645\u0642\u062f\u0627\u0631 \u0634\u0631\u0648\u0639> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
NSolve.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
NSolve.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631 = \u0645\u0642\u062f\u0627\u0631 \u0634\u0631\u0648\u0639> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Name=\u0646\u0627\u0645
Name.Syntax=[ <\u0634\u06cc\u0621> ]
NextPrime.Syntax=[ <\u0639\u062f\u062f> ]
NormalQuantilePlot.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]
Normalize.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Numerator.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u062a\u0627\u0628\u0639> ]
Numeric=\u0639\u062f\u062f\u06cc
Object=\u0634\u06cc\u0621
Ordinal=\u062a\u0631\u062a\u06cc\u0628\u06cc
OrdinalRank.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
OrthogonalVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
OsculatingCircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0634\u06cc\u0621> ]
Parabola.Syntax=[ <\u062e\u0637>, <\u0646\u0642\u0637\u0647> ]
Parameter.Syntax=[ <\u0647\u0630\u0644\u0648\u0644\u06cc> ]
PartialFractions.Syntax=[ <\u062a\u0627\u0628\u0639> ]
PartialFractions.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]
PathParameter.Syntax=[ <\u0646\u0642\u0637\u0647 \u0631\u0648\u06cc \u0645\u0633\u06cc\u0631> ]
Point=\u0646\u0642\u0637\u0647
Point.Syntax=[ <Object> ]\n[ <List> ]\n[ <Object>, <Parameter> ]\n[ <Point>, <Vector> ]
PolyLine.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0646\u0642\u0637\u0647>, ..., <\u0646\u0642\u0637\u0647> ]
Polynomial.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]\n[ <\u062a\u0627\u0628\u0639>, <\u0645\u062a\u063a\u06cc\u0631> ]
PreviousPrime.Syntax=[ <\u0639\u062f\u062f> ]
Prism=\u0645\u0646\u0634\u0648\u0631
Pyramid=\u0647\u0631\u0645
Q1.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Q3.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
QuadricSide=\u0636\u0644\u0639
Radius=\u0634\u0639\u0627\u0639
RandomDiscrete.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
RandomElement.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Rationalize.SyntaxCAS=[ <\u0639\u062f\u062f> ]
ReadText.Syntax=[ <\u0645\u062a\u0646> ]
Relation.Syntax=[ <\u0644\u06cc\u0633\u062a> ]\n[ <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
Remove.Syntax=[ <\u0644\u06cc\u0633\u062a>, <\u0644\u06cc\u0633\u062a> ]
RemoveUndefined.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Rename.Syntax=[ <\u0634\u06cc\u0621>, <\u0646\u0627\u0645> ]
ResidualPlot.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627>, <\u062a\u0627\u0628\u0639> ]
Reverse.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
RightSide.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Root=\u0631\u06cc\u0634\u0647
RootList.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
RootMeanSquare.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Row=\u0633\u0637\u0631
RunClickScript.Syntax=[ <\u0634\u06cc\u0621> ]
SD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SVD.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
SXX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SXY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
SYY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Sample=\u0646\u0645\u0648\u0646\u0647
SampleSD.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SampleSD.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
SampleSDX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
SampleVariance.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
ScientificText.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u062f\u0642\u062a> ]
Sector=\u0642\u0637\u0627\u0639
Segment.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0646\u0642\u0637\u0647>, <\u0637\u0648\u0644> ]
SelectObjects.Syntax=[ ]\n[ ..., <\u0634\u06cc\u0621>, <\u0634\u06cc\u0621> ]
SelectedElement.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
SelectedIndex.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
Semicircle.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Sequence=\u062f\u0646\u0628\u0627\u0644\u0647
SetAxesRatio.Syntax=[ <\u0639\u062f\u062f>, <\u0639\u062f\u062f> ]
SetCaption.Syntax=[ <\u0634\u06cc\u0621>, <\u0645\u062a\u0646> ]
SetConstructionStep.Syntax=[ <\u0639\u062f\u062f> ]
SetCoords.Syntax=[ <y>, <x>, <\u0634\u06cc\u0621> ]\n[ <z>, <y>, <x>, <\u0634\u06cc\u0621> ]
SetDecoration.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetFilling.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetLabelMode.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetLayer.Syntax=[ <\u0644\u0627\u06cc\u0647>, <\u0634\u06cc\u0621> ]
SetLineStyle.Syntax=[ <\u0639\u062f\u062f>, <\u062e\u0637> ]
SetLineThickness.Syntax=[ <\u062e\u0637>, <\u0639\u062f\u062f> ]
SetPointSize.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
SetPointStyle.Syntax=[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647> ]
SetSpinSpeed.Syntax=[ <\u0639\u062f\u062f> ]
SetTooltipMode.Syntax=[ <\u0634\u06cc\u0621>, <\u0639\u062f\u062f> ]
Shear=\u0628\u0631\u0634\u06cc
ShowAxes.Syntax=[ ]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowGrid.Syntax=[ ]\n[ <Boolean> ]\n[ <View>, <Boolean> ]
ShowLayer.Syntax=[ <\u0639\u062f\u062f> ]
Shuffle.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
SigmaXX.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
SigmaYY.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Simplify.SyntaxCAS=[ <\u062a\u0627\u0628\u0639> ]
Slope=\u0634\u06cc\u0628
Slope.Syntax=[ <\u062e\u0637> ]
Solutions.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
Solutions.SyntaxCAS=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]\n[ <\u0645\u0639\u0627\u062f\u0644\u0647>, <\u0645\u062a\u063a\u06cc\u0631> ]\n[ <\u0644\u06cc\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u0647\u200c\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0645\u062a\u063a\u06cc\u0631\u0647\u0627> ]
Solve.Syntax=[ <\u0645\u0639\u0627\u062f\u0644\u0647> ]
SolveODE.SyntaxCAS=[ <Equation> ]\n[ <Equation>, <Point(s) on f> ]\n[ <Equation>, <Point(s) on f>, <Point(s) on f'> ]\n[ <Equation>, <Dependent Variable>, <Independent Variable>, <Point(s) on f> ]\n[ <Equation>, <Dependent Variable>, <Independent Variable>, <Point(s) on f>, <Point(s) on f'> ]
Spearman.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
StartRecord.Syntax=[ ]\n[ <\u0628\u0648\u0644\u06cc> ]
Stretch.Syntax=[ <\u0634\u06cc\u0621>, <\u0628\u0631\u062f\u0627\u0631> ]\n[ <\u0634\u06cc\u0621>, <\u062e\u0637>, <\u0646\u0633\u0628\u062a> ]
Substitute=\u062c\u0627\u06cc\u06af\u0632\u06cc\u0646\u06cc
Take.Syntax=[ <List>, <Start Position> ]\n[ <Text>, <Start Position> ]\n[ <List>, <Start Position>, <End Position> ]\n[ <Text>, <Start Position>, <End Position> ]
Tangent.SyntaxCAS=[ <\u062a\u0627\u0628\u0639>, <\u0639\u062f\u062f> ]\n[ <\u0634\u06cc\u0621>, <\u0646\u0642\u0637\u0647> ]
Text=\u0645\u062a\u0646
TextToUnicode.Syntax=[ "<\u0645\u062a\u0646>" ]
ToComplex.Syntax=[ <\u0628\u0631\u062f\u0627\u0631> ]
ToExponential.SyntaxCAS=[ <\u0639\u062f\u062f \u0645\u062e\u062a\u0644\u0637> ]
ToPolar.Syntax=[ <\u0639\u062f\u062f \u0645\u062e\u062a\u0644\u0637> ]\n[ <\u0628\u0631\u062f\u0627\u0631> ]
ToolImage.Syntax=[ <\u0639\u062f\u062f> ]\n[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647> ]\n[ <\u0639\u062f\u062f>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647> ]
Top=\u0628\u0627\u0644\u0627
Translate=\u0627\u0646\u062a\u0642\u0627\u0644
Transpose=\u062a\u0631\u0627\u0646\u0647\u0627\u062f\u0647
Transpose.Syntax=[ <\u0645\u0627\u062a\u0631\u06cc\u0633> ]
TriangleCenter.Syntax=[ <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0646\u0642\u0637\u0647>, <\u0639\u062f\u062f> ]
TrigCombine.Syntax=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641> ]
TrigExpand.SyntaxCAS=[ <\u0639\u0628\u0627\u0631\u062a> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641> ]\n[ <\u0639\u0628\u0627\u0631\u062a>, <\u062a\u0627\u0628\u0639 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641>, <\u0645\u062a\u063a\u06cc\u0631 \u0647\u062f\u0641> ]
Turtle=\u0644\u0627\u06a9\u067e\u0634\u062a
Turtle.Syntax=[ ]
Unique.Syntax=[ <\u0644\u06cc\u0633\u062a> ]
UnitOrthogonalVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
UnitVector.Syntax=[ <\u0634\u06cc\u0621> ]
UnitVector.SyntaxCAS=[ <\u0628\u0631\u062f\u0627\u0631> ]
UpdateConstruction.Syntax=[ ]\n[ <\u062a\u0639\u062f\u0627\u062f \u062f\u0641\u0639\u0627\u062a> ]
Variance=\u0648\u0627\u0631\u06cc\u0627\u0646\u0633
Variance.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
Variance.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
Vector=\u0628\u0631\u062f\u0627\u0631
Voronoi.Syntax=[ <\u0644\u06cc\u0633\u062a \u0646\u0642\u0637\u0647\u200c\u0647\u0627> ]
Weibull=\u0648\u0627\u06cc\u0628\u0648\u0644
ZProportion2Test.Syntax=[ <Sample Proportion 1>, <Sample Size 1>, <Sample Proportion 2>, <Sample Size 2>, <Tail> ]
mad.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
mean.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]
stdev.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
stdevp.Syntax=[ <\u0644\u06cc\u0633\u062a \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u062e\u0627\u0645> ]\n[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627>, <\u0644\u06cc\u0633\u062a \u0641\u0631\u0627\u0648\u0627\u0646\u06cc\u200c\u0647\u0627> ]
stdevp.SyntaxCAS=[ <\u0644\u06cc\u0633\u062a \u0639\u062f\u062f\u0647\u0627> ]